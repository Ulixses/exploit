#!/usr/bin/perl -wU

use strict;
use 5.010;
use IO::File;
use Getopt::Long;
use Term::ANSIColor;
use System::Timeout qw(system);

print colored "\t - Launching $0 - \n", 'yellow';

my $options = GetOptions(
			'server|s=s' => \my $Server,
			'timeout|t=s'  => \my $Timeout, 
			'file|f=s'	=> \my $OutFile,
			'pattern|p=s'	=> \my $Pattern,
			);
			
Usage() 
	if(!($Server && $Timeout && $OutFile));



# Argument are ok, we will continue...
my $TmpFile="/tmp/$0.tmp";
my $Payload="redis-cli -h $Server monitor >> $TmpFile";
system($Timeout, $Payload);

my $Cpt=0;
my @Backup=();
my $Handle  = IO::File->new($TmpFile, "r") || die $!;

# Main loop:
while (my $Lines = $Handle->getline()) {
	chomp($Lines);
	
	if ($Pattern){
		say colored(" Looking for pattern $Pattern",'yellow')
			if($Cpt==0);
		
		if ($Lines =~ /$Pattern/i){
			say colored("[Pattern match] line $Cpt: $Lines",'green');
		}
	}
	elsif(!($Pattern)){
		say colored("[INFO] line $Cpt: $Lines",'blue');
	}
  
	# Pushing data in a tab for outputfile
	push(@Backup,$Lines);
	$Cpt++;
} 

$Handle->close;
unlink($TmpFile);

# Writing log file...
my $Handle2 = IO::File->new($OutFile, "w+") || die $!;

foreach my $Output(@Backup){
	say $Handle2  $Output;
}

say colored("$OutFile log file successfully created!",'blue') || die $!;
$Handle2->close;


# Functions part
sub Usage{
	say colored("\n[*] Usage: $0 --server (-s) <redis_instance> --timeout (-t) <timeout> --file (-f) <log_file> \n\n\tOption:\n\t\t--pattern (-p)<ex: password>\n\n",'red');
	exit(0);
}
